(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{301:function(t,s,n){"use strict";n.r(s);var a=n(5),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"哎，编程基础，要牢记啊"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#哎，编程基础，要牢记啊"}},[t._v("#")]),t._v(" 哎，编程基础，要牢记啊")]),t._v(" "),n("blockquote",[n("p",[t._v("js 执行")])]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \n    1. 编译 -出现错误(3)\n    2. 执行 -出现错误(3)\n    3. 判断是否有下一个代码段 -是(1) -否(结束)\n    */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编译错误和运行错误出错时，各自受各自的影响")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    var frist "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    function "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("frist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefine")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//alert("hello")')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),n("blockquote",[n("p",[t._v("数组，属于对象引用类型\n[]\nnew Array(1,2,3);\nnew Array(3); //创建一个数组长度为3\ndecodeURIComponent解码URL地址可以解空格")])]),t._v(" "),n("blockquote",[n("p",[t._v("函数或方法由那个Object调用起来，函数内部this便指向谁,对象绑定事件，事件内的this便指向该对象\n对象,以下为动态绑定"),n("code",[t._v("A.onclick = a; function a() {//this为对象A}")])])]),t._v(" "),n("blockquote",[n("p",[t._v('监听事件attachEvent(事件名,callback)适用于IE浏览器,\nW3C浏览器,事件名没有"on"前缀,addEventListener(事件名, callback, 事件模型(true:捕获,false:冒泡))\n无论IE或 W3C,默认冒泡false，IE不支持捕获;\nIE8及以下,先绑定后触发；W3C先绑定先触发;\n事件模型\nDOM元素层级，body-div1-div2(click)\n1.冒泡，从里向外,触发顺序div2-div1-body,上升至最顶级元素;\n'),n("code",[t._v("window.event.cancelBubble = true;//IE中事件对象取消冒泡")]),t._v(";\n"),n("strong",[t._v("W3C,event.stopPropagation();取消冒泡")]),t._v("\n2.捕获，从上向下, 触发顺序body-div1-div2(click),")])]),t._v(" "),n("blockquote",[n("p",[t._v("默认行为\nsubmit,href,等都是dom元素的默认行为;")])]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//IE浏览器有event事件")]),t._v("\n  window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("returnValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" false"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  evt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("prevenDefault")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("BOM模型，浏览器打开一个网页程序时，js会自动创建对象，首先会创建window,然后再为window创建它的子级对象，\n形成一个树状的模型;\nwindow对象是所有对象的顶级对象;\n创建的所有全局对象和全局函数都是存储在window对象下的;\n面向对象")])]),t._v(" "),n("ol",[n("li",[t._v("面向机器-> 无法夸硬件平台结构")]),t._v(" "),n("li",[t._v("面向过程-> 将程序的执行分解成若干个步骤，")]),t._v(" "),n("li",[t._v("面向对象-> 将程序分解成若干个事物，类(代表某类事物，是抽象的)和对象(某个事物，是具体的)\njs 中的class, Function person -》person 类的同名构造函数；\nFunction person 为person类的构造函数、\nvar 对象 = new 类名();//开辟了新的内存空间,直接执行类的构造函数\n对象之间的赋值是按地址赋值;")]),t._v(" "),n("li",[t._v("对象的名称在栈")]),t._v(" "),n("li",[t._v("对象的值在堆")])]),t._v(" "),n("h4",{attrs:{id:"变量放堆中，需要先在栈找名字，再在堆中找值，消耗性能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量放堆中，需要先在栈找名字，再在堆中找值，消耗性能"}},[t._v("#")]),t._v(" 变量放堆中，需要先在栈找名字，再在堆中找值，消耗性能")]),t._v(" "),n("p",[t._v("null,空，不占用栈或堆得空间;所以有时用变量= null;释放空间；\ndelete只能删除自定义对象的属性，不能删除系统定义对象的属性；")]),t._v(" "),n("h4",{attrs:{id:"成员方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#成员方法"}},[t._v("#")]),t._v(" 成员方法")]),t._v(" "),n("p",[t._v("在对象声明之后的,动态添加的方法;")]),t._v(" "),n("h4",{attrs:{id:"object是所有类的父类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#object是所有类的父类"}},[t._v("#")]),t._v(" object是所有类的父类")]),t._v(" "),n("p",[t._v("通过构造器的到的对象和使用json创建的对象的区别：")]),t._v(" "),n("ol",[n("li",[t._v("省略构造器的定义")]),t._v(" "),n("li",[t._v("使用构造器简化属性的定义")])]),t._v(" "),n("h4",{attrs:{id:"原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[t._v("function "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以为Person类下的所有对象添加属性")]),t._v("\nvar p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zhangsan"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//p1是Person类的实例化,但是不继承Person类的prototype属性;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对象的实例有{{prototype}},即_proto_;")]),t._v("\nObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Person"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nPerson"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true;")]),t._v("\n\n\nPerson"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Person.prototype.age和Person.age不同前者为实例属性，后者为静态属性")]),t._v("\np1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Person.prototype.age === 40;p1.age = 40;")]),t._v("\np1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//p1.age=50;")]),t._v("\n")])])]),n("p",[n("strong",[t._v("当程序加载Person函数时，会为Person构造函数创建Person原型对象,他们是独立存在的;构造器中有一个prototype属性指向了原型对象,原型对象中有一个constructor属性指向构造器,当Person类的实例在使用一个不存在的属性时，会自动到Person构造器的原型对象中去找")])]),t._v(" "),n("h4",{attrs:{id:"prototype和-proto"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prototype和-proto"}},[t._v("#")]),t._v(" prototype和__proto__")]),t._v(" "),n("blockquote",[n("p",[t._v("_Object类_静态属性_函数闭包")])]),t._v(" "),n("ul",[n("li",[t._v("使用Object避免了对构造器的定义")])]),t._v(" "),n("ol",[n("li",[t._v("因为所有的类在被系统加载之后,都会创建这个类的原型对象 "),n("code",[t._v("prototype = new Object")]),t._v(";")]),t._v(" "),n("li",[t._v("javascript 可以模拟一些面向对象语言中 static关键字定义的类的静态属性或方法")])]),t._v(" "),n("ul",[n("li",[t._v("类名 属性名")]),t._v(" "),n("li",[t._v("类名 属性名 = function() {};")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[n("p",[t._v("'闭包',一个拥有很多变量和绑定这些变量的环境表达式,这些变量也是该表达式的一部门;")]),t._v(" "),n("ul",[n("li",[t._v("在全局中不能访问局部变量，因为作用域不同，函数执行完毕后，局部变量会被回收;")]),t._v(" "),n("li",[t._v("闭包的作用")])]),t._v(" "),n("ol",[n("li",[t._v("访问局部变量;")]),t._v(" "),n("li",[t._v("使变量所占内存不被释放;")])]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用一个函数包含变量i,这样局部变量i的内存不会被回收")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//i的内存不回收每次调fn2,i的值都会增加")]),t._v("\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  var i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  function "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fn2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回函数fn2的首地址")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nvar test "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//test也指向了fn2函数的首地址")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("strong",[t._v("编程语言中指向的对象,不能被回收,内存不能被回收,勾住指向")])])])]),t._v(" "),n("blockquote",[n("p",[t._v("私有属性\n在面向对象的思想中，有些属性不想公开可以定义为私有的，在js中可以模拟这个功能")])]),t._v(" "),n("ol",[n("li",[t._v("语法")])]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[t._v("function "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("P_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  var name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//私有属性")]),t._v("\n  this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("this永远指向的是最后调用它的对象")]),t._v("\n2. 访问私有属性可以设置set,get方法，只有set为只写属性，只有get为只读属性\n3. 使用call,apply")]),t._v(" "),n("ul",[n("li",[t._v("使用指定的对象调用当前的函数\nJs内部的this会随着程序的运行指向不同的对象可使用call,apply改变指向")])]),t._v(" "),n("blockquote",[n("p",[t._v("JS模拟继承，子类拥有父类的属性和方法")])]),t._v(" "),n("ol",[n("li",[t._v("扩展Object方法")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Object.prototype.ext = function() {}")])])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("使用call,apply方法")])]),t._v(" "),n("ul",[n("li",[t._v("父类构造器.call(this...);")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("原型继承(推荐，JS默认的继承)\n子类.prototype = new 父类();")])]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[t._v("function "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p_age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p_age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Student")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p_no"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("no"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("p_no"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("say "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("no "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nStudent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wang'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvar stu "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Student")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("speak")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("以上代码原理可查看\n"),n("img",{attrs:{src:"/images/prototypeExrenr.png",alt:"原型继承",title:"prototypeExrenr"}})]),t._v(" "),n("blockquote",[n("p",[t._v("js中的函是由对象调用起来的，全局函数是window.函数,函数中的this即指向调用它的对象")])]),t._v(" "),n("blockquote",[n("p",[t._v("正则对象")])]),t._v(" "),n("ol",[n("li",[t._v("隐式创建")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("- var 对象 = /匹配模式/匹配标志\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("直接实例化")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v('- var 对象 = new RegExp("匹配模式", "匹配标志");\n')])])]),n("p",[n("strong",[t._v("区别")])]),t._v(" "),n("ol",[n("li",[t._v('如果使用直接实例化,那么像"\\d"这样的字符,需要转义"\\d";')])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("- RegExp类\n test(str): 匹配指定的模式是否出现在字符串中\n exec(str): 返回匹配模式的字符串\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("String类\nserach: 匹配符合模式的字符串出现的位置\nmatch: 以数组形式返回匹配的字符串,没有匹配到的则返回null\nreplace: 使用指定的内容替换匹配模式的字符串\nsplit: 使用匹配模式的字符串作为分隔符对字符串进行分隔,返回数组")]),t._v(" "),n("li",[t._v("子表达式")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("- 在正则表达式中,使用一对括号括起来的内容是一个子表达式;\n在正则匹配模式中，子表达式匹配到的内容会被系统捕获至系统的缓冲区中反向引用；\n捕获之后，可以在匹配模式中，使用\\n(n:数字)来引用系统的第n号缓冲区内容;\n\n- 匹配多个字符后面是123,,后面的内容和前面的多个字符相同,如abc123abc;\n\n reg = /(\\w+)\\d\\d\\d\\1/gi; //\\1捕获子表达式(\\w+)\n  1. 查找连续的相同的四个数子，如: 1111\n  var reg = /(\\d)\\1\\1\\1/gi;或  /(\\d)\\1{3}/; //限定符出现3次\n  2. 查1221,3443等\n  reg = /(\\d)(\\d)\\2\\1/gi;\n  3. 查AABB,TTMM等\n  reg = /(\\w)\\1(\\w)\\2/gi;\n  4. 查找连续相同的四个数字或四个字符\n  reg = /(\\w)\\1\\1\\1/gi;\n  5. 查HTML标记，中间的内容\n  reg = /<(\\w+)>.+<\\/\\1>/gi; //+,一个或多个\n")])])]),n("blockquote",[n("p",[t._v("正则语法细节\n1. 普通字符: a,b,c,d 1234\n2. 特殊字符(元字符): \\d\\D\\w,...\n- 需求分析\n1. 查什么\n2. 从哪查\n3. 查多少")])]),t._v(" "),n("ul",[n("li",[n("ol",[n("li",[t._v("限定符\n限定符可以指定正则表达式的一个给定组件必须要出现多少次才能才能满足匹配\n满 ;")])])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("  * 0~n次 === {0,}\n  + 1~n次 === {1,}\n  ？0~1次 === {0,1}\n  {n} 匹配确定的n次\n  {n,} 至少匹配n次\n  {n,m} 最少匹配n次且最多匹配m次\n")])])]),n("h3",{attrs:{id:"代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),n("p",[t._v("reg = /\\d{3}/gi; //匹配三个数字\nreg = /\\d{3,}/gi; //最少匹配三个数字\nreg = /\\d{3,5}/gi; //最多匹配5个,那么在正则表达式中会自动匹配多的哪一种,这在正则中贪婪匹配原则；")]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v('字符串匹配符\n字符匹配符用于匹配某个或某些字符\n\\D: 匹配一个非数字字符 [^0-9];\n\\w: 匹配包括下划线的任何单词字符. [0-9a-zA-Z_]\n\\W: 匹配任何非单词字符; [^\\w]\n\\s: 匹配任何空白字符; 空格、制表符、换行符\n\\S: 匹配任何非空白字符;\n.: 匹配除"\\n"之外的任何单个字符,如果想匹配任\n意字符[.\\n]')])]),t._v(" "),n("blockquote",[n("p",[t._v("定位符")])]),t._v(" "),n("p",[t._v("定位符可以将一个正则表达式固定在一行的开始或结束,也可以创建只在单词内或只在单词的考试或结尾处出现的正则表达式")]),t._v(" "),n("p",[t._v("^ : 匹配输入字符串的开始位置\n$ : 匹配输入字符串的结束位置\n\\b: 匹配一个单词的边界\n\\B: 匹配非单词边界")]),t._v(" "),n("blockquote",[n("p",[t._v("关于正则表达式的几种特殊用法")])]),t._v(" "),n("ol",[n("li",[t._v("(?=)\n正向预查")])]),t._v(" "),n("ul",[n("li",[t._v("查 '好人'前面的名字\nvar str = '张三超好人,张三超大侠';\nreg = /张三超(?=好人)/gi; //输出 '张三超'")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("(?!)\n负向预查")])]),t._v(" "),n("ul",[n("li",[t._v("查不是'好人'前面的名字\nvar str = '张三超好人,张三超大侠';\nreg = /张三超(?！好人)/gi; //输出 '张三超',RegExp.lastIndex")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("(?😃\n结果不被捕获")])]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[t._v("var str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hellojavascript.hellophp.hellojava.helloajax'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvar reg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("javascript"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("php"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("gi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvar result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("(javascript|php)会被当做子表达式来处理，内容会被捕获,但在程序中,捕获的内容没有任何用途,这种情况下，,可以\n使用(?😃,让系统不去捕获子表达式匹配的内容;")]),t._v(" "),n("blockquote",[n("p",[t._v("DucumentFragment: 文档碎片(高效批量更新多个节点)")])]),t._v(" "),n("ol",[n("li",[t._v("document: 对应显示的页面,包含n个elment, 一旦更新document内部的某个元素，界面更新")]),t._v(" "),n("li",[t._v("documentFragment: 内存中保存n个element的容器对象(不与界面关联),如果更新fragment中的某个element,界面不变")])]),t._v(" "),n("blockquote",[n("p",[t._v("发布者-订阅者模式（backbone.js）\n脏值检查（angular.js）\n数据劫持（vue.js）")])]),t._v(" "),n("blockquote",[n("p",[t._v("dom.nodeType == 1,为元素节点")])]),t._v(" "),n("blockquote",[n("p",[t._v("JS中的全局作用域下的变量提升只是针对变量,全局变量未声明的\n比如"),n("code",[t._v("a = 2")]),t._v(",在这之前调用a会报错ReferenceError;\n函数的执行会形成私有作用域,私有作用域进入")])]),t._v(" "),n("ul",[n("li",[t._v("先判断有无形参复制")]),t._v(" "),n("li",[t._v("变量提升")]),t._v(" "),n("li",[t._v("不管条件是否成立,都要进行变量提升,新浏览器中对于判断体中只是提前声明;")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("```c\n/*\n* 变量提升 var foo;\n*/\nvar foo =1;\nfunction bar() { //私有作用域\n  if(!foo){ //=> !undefined\n  var foo = 10;\n }\n console.log(foo);\n}\nbar();\n```\n")])])]),n("blockquote",[n("p",[t._v("ES6 let 没有变量提升")])]),t._v(" "),n("blockquote",[n("p",[t._v("javascript中的with语法")])]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[t._v("function "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    with "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nvar o1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvar o2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//underfined")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不好，a被泄漏到全局作用域上了")]),t._v("\n")])])]),n("ol",[n("li",[t._v("with 所声明的作用域是 o2, 从这个作用域开始对 a 进行 LHS查询。o2 的作用域、foo(…) 的作用域和全局作用域中都没有找到标识符 a，因此在非严格模式下，会自动在全局作用域创建一个全局变量），在严格模式下，会抛出ReferenceError 异常。")]),t._v(" "),n("li",[t._v("(with和eval性能下降)JavaScript 引擎会在编译阶段进行数项的性能优化。\n其中有些优化依赖于能够根据代码的词法进行静态分析，并预先确定所有变量和函数的定义位置，才能在执行过程中快速找到标识符。\n  但如果引擎在代码中发现了 with，它只能简单地假设关于标识符位置的判断都是无效的，因为无法知道传递给 with 用来创建新词法作用域的对象的内容到底是什么。\n  最悲观的情况是如果出现了 with ，所有的优化都可能是无意义的。因此引擎会采取最简单的做法就是完全不做任何优化。如果代码大量使用 with 或者 eval()，那么运行起来一定会变得非常慢。无论引擎多聪明，试图将这些悲观情况的副作用限制在最小范围内，也无法避免如果没有这些优化，代码会运行得更慢的事实。")])]),t._v(" "),n("blockquote",[n("p",[t._v("es6 语法记录")])]),t._v(" "),n("p",[t._v("变量的引用 export {<变量>}\n值拷贝 CommonJs输出,export default\nCommonJs运行在服务器上,运行时加载，代码执行到哪一行才回去加载模块;第一次加载的时候运行一次，之后加载返回的都是第一次的结果，具有缓存效果\nes6 Module 是静态的输出一个接口,发生在编译的阶段;没有缓存结果")]),t._v(" "),n("p",[t._v("es6的函数默认参数没有变量提升，作用域在函数内部代码执行前,形成一个单独的作用域")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[t._v("let w "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("z "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//形成一个单独的作用域")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  let x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" w"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("undefined"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*传入的参数*/")]),t._v("\n  let y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("undefined"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*传入的参数*/")]),t._v("\n  let z "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" z"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("undefined"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" z "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*传入的参数*/")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);