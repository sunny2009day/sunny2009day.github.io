(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{278:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("strong",[t._v("有些规模的前端团队都需要构建自己的npm")])]),t._v(" "),a("ul",[a("li",[t._v("基本上面试有些规模的公司,都会这样，多么痛的领悟")]),t._v(" "),a("li",[t._v("查找相关资料\n1> Sinopia ，据说sinoipa不支持包命名空间,sinopia在代理到npmjs.org公有库时将@符号转码为%40，致使在公有库中找不到对应的包，返回404 ，简单点说就是 @angular/core 代理请求的时候被转换成了 %40angular/core，所以需要在代理请求发出之前将其转回 @angular/core,且作者已经不更新未尝试直接放弃，\n2> verdaccio")])]),t._v(" "),a("h2",{attrs:{id:"操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[t._v("#")]),t._v(" 操作")]),t._v(" "),a("blockquote",[a("p",[t._v("使用npm 全局安装\n"),a("code",[t._v("pm install –global verdaccio")]),t._v("\n运行")])]),t._v(" "),a("ul",[a("li",[t._v("安装完成后直接输入 verdaccio 命令即可运行\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14983171-d127565f4321b609.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"1573486032(1).jpg"}})]),t._v(" "),a("li",[t._v("修改verdaccio的配置文件")])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("# #号后面是注释\n# 所有包的缓存目录\nstorage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("storage\n# 插件目录\nplugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("plugins\n\n#开启web 服务"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("能够通过web 访问\nweb"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("# WebUI is enabled as default, if you want disable it, just uncomment this line")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#enable: false")]),t._v("\n  title"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Verdaccio\n#验证信息\nauth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  htpasswd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    #  用户信息存储目录\n    file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("htpasswd\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v('# Maximum amount of users allowed to register, defaults to "+inf".')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("# You can set this to -1 to disable registration.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#max_users: 1000")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("# a list of other known repositories we can talk to")]),t._v("\n#公有仓库配置\nuplinks"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  npmjs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("npmjs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n\npackages"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@*/*'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("# scoped packages")]),t._v("\n    access"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" $all\n    publish"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" $authenticated\n\n    #代理 表示没有的仓库会去这个npmjs 里面去找 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    #npmjs 又指向  https"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("npmjs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("就是上面的 uplinks 配置\n    proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" npmjs\n\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'**'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    # 三种身份"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所有人"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("匿名用户"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("认证"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("登陆"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("用户\n    # "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$all"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$anonymous"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$authenticated"')]),t._v("\n\n    #是否可访问所需要的权限\n    access"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" $all\n\n    #发布package 的权限\n    publish"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" $authenticated\n\n    # 如果package 不存在"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("就向代理的上游服务发起请求\n    proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" npmjs\n\n# To use `npm audit` uncomment the following section\nmiddlewares"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  audit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" true\n# 监听的端口 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("重点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 不配置这个"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("只能本机能访问\nlisten"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4873")]),t._v("\n# log settings\nlogs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" pretty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" level"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  #"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" verdaccio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" level"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("可在线查看verdaccio的全部配置\n"),a("a",{attrs:{href:"https://github.com/verdaccio/verdaccio/blob/master/conf/full.yaml",target:"_blank",rel:"noopener noreferrer"}},[t._v("verdaccio的全部配置"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("在网页上打开http://localhost:4873\n. 相当于在本地搭建一个类似npm的仓库,不过只能在能连接到127.0.0.1:4873的内网使用;")])]),t._v(" "),a("blockquote",[a("p",[t._v("常用配置")])]),t._v(" "),a("ul",[a("li",[t._v("storage： 仓库保存的地址，也是发布组件（npm publish）时仓库保存的地址 。")]),t._v(" "),a("li",[t._v("auth： htpasswd file：账号密码的文件地址，初始化时不存在，可指定需要手动创建。")]),t._v(" "),a("li",[t._v("max_users：默认1000，为允许用户注册的数量。\n为-1时，不允许用户通过npm adduser注册。但是，当为-1时，可以通过直接编写htpasswd file内容的方式添加用户。有且只有一个用户")]),t._v(" "),a("li",[t._v("uplinks: 配置上游的npm服务器，主要用于请求的仓库不存在时到上游服务器去拉取。")]),t._v(" "),a("li",[t._v("packages: 配置模块。access访问下载权限,publish包的发布权限。")])]),t._v(" "),a("blockquote",[a("p",[t._v("具体使用")])]),t._v(" "),a("ul",[a("li",[t._v("当前npm 服务指向 本地 \n"),a("code",[t._v("npm set registry http://localhost:4873")])]),t._v(" "),a("li",[t._v("注册用户 \n"),a("code",[t._v("npm adduser –registry http://localhost:4873")])]),t._v(" "),a("li",[t._v("按照提示输入userName 和 password,email\n输入后就注册完成")]),t._v(" "),a("li",[t._v("可检查当前是否是注册用户\n"),a("code",[t._v("npm who am i")])]),t._v(" "),a("li",[t._v("按照npm publish 的标准格式发布包")])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("npm publish\n")])])]),a("ul",[a("li",[t._v("待控制台执行成功就可以打开http://localhost:4873,此时,如下图,显示刚刚publis的包")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14983171-f5611617d8885991.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})]),t._v(" "),a("blockquote",[a("p",[t._v("项目中使用\n"),a("strong",[t._v('注意此时npm 的registry指向http://localhost:4873/"的本地地址,只能内网访问')]),t._v(";\n"),a("code",[t._v("nrm current")]),t._v("查看不到当前的镜像情况")])]),t._v(" "),a("ul",[a("li",[t._v("npm i 其他公共的包也是可以的,因为她默认从本地安装,如果本地没有,就从config.yaml配置的上游的npm服务器，主要用于请求的仓库不存在时到上游服务器去拉取。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14983171-039aa1f8c4b6c425.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})]),t._v(" "),a("ul",[a("li",[t._v("此时可使用"),a("code",[t._v("npm i <自定义的包名>")]),t._v("便可安装到新项目的node_modules中")]),t._v(" "),a("li",[t._v("在下图中如果自定义的包执行了bin命令，可直接在package.json 的script中通过包名执行包对应的命令,如下会启动包"),a("code",[t._v("pack-sun")]),t._v("的pack-sun的bin命令;")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/14983171-6d3147ae2d2d68a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})]),t._v(" "),a("blockquote",[a("p",[t._v("发布以@开头命名的作用域包")])]),t._v(" "),a("ul",[a("li",[t._v("为了便于包管理和认证可以发布@开头的cluster")]),t._v(" "),a("li",[t._v("初始化npm包\n"),a("code",[t._v("npm init --scope=<命名空间>")]),t._v("\n进行操作之后,publish\n"),a("code",[t._v("npm publish --access public")]),t._v(",在publish时添加--access public参数告知npm这不是一个私有包")]),t._v(" "),a("li",[t._v("可以设置 "),a("code",[t._v("npm config set scope <your_scope>")]),t._v("指定npm init --scope的域名(尝试在verdaccio上无效)")])])])}),[],!1,null,null,null);s.default=e.exports}}]);